//next greater element(one array)
import java.util.*;
public class Main
{
	public static void main(String[] args) {
		int given[]={1,4,2,5,3,1,7,8,2,0};
		Stack<Integer> st=new Stack<>();
		int arr[]=new int[given.length];
		for(int i=0;i<arr.length;i++){
		    arr[i]=-1;
		}
		nextGreater(given,st,arr);
		System.out.println(Arrays.toString(arr));
		//System.out.println(st);
	}
	public static void nextGreater(int []given, Stack<Integer> st,int []arr){
	    for(int i=0;i<given.length;i++){
	        while(!st.isEmpty() && given[st.peek()]<given[i]){
	            arr[st.pop()]=given[i];
	        }
	        st.add(i);
	    }
	}
}


//next greater element(two array)
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Stack<Integer> st = new Stack<>();
        Map<Integer, Integer> map = new HashMap<>();
        int num1[] = {4, 1, 2};
        int num2[] = {1, 3, 4, 2};
        
        int[] result = nextGreater(num1, num2, st, map);
        System.out.println(Arrays.toString(result));
    }

    public static int[] nextGreater(int[] num1, int[] num2, Stack<Integer> st, Map<Integer, Integer> map) {
        for (int i = 0; i < num2.length; i++) {
            while (!st.isEmpty() && num2[st.peek()] < num2[i]) {
                map.put(num2[st.pop()], num2[i]);
            }
            st.push(i);
        }
        
        while (!st.isEmpty()) {
            map.put(num2[st.pop()], -1);
        }

        for (int i = 0; i < num1.length; i++) {
            if (map.containsKey(num1[i])) {
                num1[i] = map.get(num1[i]);
            }
        }
        
        return num1;
    }
}

